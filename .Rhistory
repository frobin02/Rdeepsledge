devtools::create("Rdeepsledge")
export("Rdeepsledge")
roxygen2::roxygenize(".")
devtools::build()
library(Rdeepsledge)
remove.packages("Rdeepsledge")
install.packages("~/Rdeepsledge_0.0.0.9000.tar.gz", repos = NULL, type = "source")
Rtools::install.packages("~/Rdeepsledge_0.0.0.9000.tar.gz", repos = NULL, type = "source")
install.packages("~/Rdeepsledge_0.0.0.9000.tar.gz", repos = NULL, type = "source")
devtools::load_all()
deepS_correct_laser()
devtools::check()
.libPaths()
devtools::load_all()
library(Rdeepsledge)
conflict_prevent()
install.packages("conflicted")
library(Rdeepsledge)
remove.packages("Rdeepsledge")
RESULT
knitr::opts_chunk$set(echo = TRUE)
RESULT <- readRDS(file_path)
library(Rdeepsledge)
file_path <- system.file("MPO_REFUGE_source.R", package = "Rdeepsledge")
RESULT <- readRDS(file_path)
RESULT
head(RESULT)
RESULT[3]
View(RESULT)
mylaser <- DeepS_correct_laser(RESULT)
head(mylaser[1])
head(mylaser[2])
mylaser
str(mylaser)
mylaser <- DeepS_correct_laser(RESULT)
head(mylaser$data)
plot(mylaser$layers)
mylaser <- DeepS_correct_laser(RESULT)
head(mylaser$data)
mylaser$layers
mylaser <- DeepS_correct_laser(RESULT)
head(mylaser$data)
mylaser[2]
print(mylaser[2])
mylaser[2]
head(mylaser$data)
head(as.data.frame(mylaser$data))
dataloc<-as.data.frame(mylaser$data)
mylaser$data
mylaser <- DeepS_correct_laser(RESULT)
mylaser$data
mylaser
mylaser$DATA
mylaser
mylaser <- DeepS_correct_laser(RESULT)
dataloc<-as.data.frame(mylaser$DATA)
dataloc
mylaser <- DeepS_correct_laser(RESULT)
mylaser$DATA
#PACKAGE "Rdeepsledge"
#"Fonction de correction de la detection laser"
#' Cette fonction detect les doubles lasers verts sur une luge benthique tracté"
#'@param RESULT est le jeu de données types produit par DeepS_find_laser.R
#'@return un fichier RESULT, est une sauvegarde dans user document
#'@export
DeepS_correct_laser<-function(RESULT){
library(ggplot2)
library(raster)
library(stringi)
LASER<-list()
ggplot(RESULT,aes(x=X,y=Y))+geom_point()
RESULT$Nframe<-do.call(rbind,strsplit(RESULT$frame,c("_")))[,2]
RESULT$Nframe<-as.numeric(gsub(".png","",RESULT$Nframe))
RESULT2<-droplevels(subset(RESULT,Nlaser%in%2))
library(dplyr)
RESULT2 %>%
arrange(desc(Nframe),desc(X) ) -> RESULT2
RESULT2$seq<-c(1,2)
maxX<-mean(RESULT2$X[RESULT2$seq==1])
minX  <-  mean(RESULT2$X[RESULT2$seq==2])
mid<- mean(c(minX,maxX))
A<- ggplot(RESULT,aes(y=Nframe,x=Y))+geom_point()
B<- ggplot(RESULT,aes(y=Nframe,x=X))+geom_point()+geom_vline(xintercept = c(maxX,mid,minX))
library(ggpubr)
first<- ggarrange(A,B,ncol=2)
RESULT$laserposition= ifelse(RESULT$X>=mid,"right","left")
RL <-droplevels(subset(RESULT,laserposition%in% "left"))
RL$DISMEAN<- abs(RL$X-minX)
RR <-droplevels(subset(RESULT,laserposition%in% "right"))
RR$DISMEAN<- abs(RR$X -maxX)
statsRR <-  boxplot.stats(RR$DISMEAN)
statsRR <-  statsRR$stats[5]
RR$COL<-ifelse(RR$X>=maxX-statsRR & RR$X<=maxX+statsRR,"green","red")
statsRL <- boxplot.stats(RL$DISMEAN)
statsRL <- statsRL$stats[5]
RL$COL<-ifelse(RL$X>=minX-statsRL & RL$X<=minX+statsRL,"green","red")
RESULT<-rbind(RL,RR)
B<- ggplot(RESULT,aes(y=Nframe,x=X,color=COL))+
geom_point()+geom_vline(xintercept = c(maxX,mid,minX))
A<- ggplot(RESULT,aes(y=Nframe,x=Y,color=COL))+
geom_point()
ggarrange(A,B,ncol=2)
ggplot(RESULT,aes(x=X,y=Y,color=COL))+geom_point()
r <- raster(nrows=1100/4, ncols=1800/4, xmn=0, xmx=1800, ymn=0, ymx=1100)
r[] <- NA
points_df <- data.frame(x = RESULT$X, y = RESULT$Y, value = 1)
r <- rasterize(points_df[, c("x", "y")], r, field=points_df$value, fun=sum)
r[r<=1] <-NA
r[r>=1] <-1
buffered_raster <- buffer(r, width=1, maskNA=FALSE)
polygons <- rasterToPolygons(buffered_raster, dissolve=TRUE)
sel<- extract(polygons,points_df[,c(1,2)])
RESULT$layer<- sel[2]
RESULT$layer<-ifelse(is.na(RESULT$layer) ,"red","green")
B<- ggplot(RESULT,aes(y=Nframe,x=X,color=layer))+
geom_point()+geom_vline(xintercept = c(maxX,mid,minX))
A<- ggplot(RESULT,aes(y=Nframe,x=Y,color=layer))+
geom_point()
first<-  ggarrange(A,B,ncol=2)
namevideo <-gsub("\\\\","£",RESULT$origin [1])
namevideo <-as.vector(stri_split_fixed(namevideo,"£") )
namevideo<-namevideo[[1]][length(as.factor(namevideo[[1]]))]
allp<-  ggplot(RESULT,aes(x=X,y=Y,color=layer))+geom_point()+ggtitle(namevideo)
vieww <- ggarrange(allp,first,ncol=1)
LASER$DATA<-RESULT
LASER$GRAPH<-vieww
return(LASER)
}
#
# NEWRES<-RESCORR(RESULT)
#
# devtools::create("Rdeepsledge")
# export("Rdeepsledge")
# use_git()
#
# # Pousser le package sur GitHub
# use_github()
#
# chemin <- system.file("MPO_REFUGE_source.R", package = "Rdeepsledge")
#
#
# RESULT <-readRDS("MPO_REFUGE_source.R")
# [2] "laser_position_Plume2022_P4ST12_GOPR_2022-07-15.txt"
# RESULT <- file.choose()
#'
#'
mylaser <- DeepS_correct_laser(RESULT)
head(mylaser$DATA)
print(mylaser$GRAPH)
head(mylaser$DATA)
kble(head(mylaser$DATA))
mylaser <- DeepS_correct_laser(RESULT)
knitr::kable(head(mylaser$DATA), digits = 0, valign = 't')
print(mylaser$GRAPH)
mylaser <- DeepS_correct_laser(RESULT)
knitr::kable(head(mylaser$DATA), digits = 0, valign = 't')
knitr::opts_chunk$set(echo = TRUE,warning=FALSE)
library(Rdeepsledge)
MP4_file <- file.choose ()
file_path <- system.file("MPO_REFUGE_source.R", package = "Rdeepsledge")
RESULT <- readRDS(file_path)
mylaser <- DeepS_correct_laser(RESULT)
knitr::kable(head(mylaser$DATA), digits = 0, valign = 't')
file_path <- system.file("MPO_REFUGE_source.R", package = "Rdeepsledge")
RESULT <- readRDS(file_path)
mylaser <- DeepS_correct_laser(RESULT)
knitr::kable(head(mylaser$DATA), digits = 0, valign = 't')
library(Rdeepsledge)
file_path <- system.file("MPO_REFUGE_source.R", package = "Rdeepsledge")
RESULT <- readRDS(file_path)
mylaser <- DeepS_correct_laser(RESULT)
knitr::kable(head(mylaser$DATA), digits = 0, valign = 't')
print(mylaser$GRAPH)
library(knitr)
knitr::kable(head(mylaser$DATA), digits = 0, valign = 't')
knitr::opts_knit$set(eval.after = 'fig.cap')
knitr::opts_chunk$set(echo = TRUE, fig.align="center",warning = FALSE,message = FALSE,error = TRUE)
file_path <- system.file("MPO_REFUGE_source.R", package = "Rdeepsledge")
RESULT <- readRDS(file_path)
knitr::opts_chunk$set(echo = TRUE, fig.align="center",warning = FALSE,message = FALSE,error = TRUE)
file_path <- system.file("MPO_REFUGE_source.R", package = "Rdeepsledge")
RESULT <- readRDS(file_path)
mylaser$GRAPH
knitr::opts_chunk$set(echo = TRUE, fig.align="center",warning = FALSE,message = FALSE,error = TRUE)
file_path <- system.file("MPO_REFUGE_source.R", package = "Rdeepsledge")
library(ggplot2)
RESULT <- readRDS(file_path)
knitr::opts_chunk$set(echo = TRUE, fig.align="center",warning = FALSE,message = FALSE,error = TRUE)
file_path <- system.file("MPO_REFUGE_source.R", package = "Rdeepsledge")
library(ggplot2)
library(kableExtra)
RESULT <- readRDS(file_path)
mylaser$GRAPH
print(mylaser$GRAPH)
print(mylaser$GRAPH)
print(mylaser$GRAPH)
knitr::kable(head(mylaser$DATA), digits = 0, valign = 't')
library(knitr)
kable(head(mylaser$DATA), format='html', digits = 0, valign = 't')
knitr::opts_chunk$set(echo = TRUE, fig.align="center",warning = FALSE,message = FALSE,error = TRUE)
file_path <- system.file("MPO_REFUGE_source.R", package = "Rdeepsledge")
library(ggplot2)
library(kableExtra)
library(knitr)
RESULT <- readRDS(file_path)
library(knitr)
tabsyn <- head(mylaser$DATA)
tabsyn %>%
kbl(caption = "\\label{tab:Tab.1}Table 1:tableau de données avec balise") %>%
kable_classic(full_width = F, html_font = "Cambria")
library(knitr)
tabsyn <- head(mylaser$DATA)
tabsyn %>%
kbl(caption = "Table 1:tableau de données avec balise") %>%
kable_classic(full_width = F, html_font = "Cambria")
library(knitr)
tabsyn <- head(mylaser$DATA)
tabsyn %>%
kbl(caption = "Table 1:tableau de données avec balise") %>%
kable_classic(full_width = T, html_font = "Cambria")
mylaser$GRAPH
knitr::opts_chunk$set(echo = TRUE, fig.align="center",warning = FALSE,message = FALSE,error = TRUE)
file_path <- system.file("MPO_REFUGE_source.R", package = "Rdeepsledge")
library(ggplot2)
library(kableExtra)
library(knitr)
exemple <- readRDS(file_path)
library(Rdeepsledge)
mylaser <- DeepS_correct_laser(exemple)
list.files(pattern="laser_pos")
setwd("~/")
list.files(pattern="laser_pos")
RESULT<-read.table("laser_position_Plume2022_P2ST16_GOPR_2022-07-18.txt")
saveRDS(RESULT,'MPO_REFUGE_source.Rdata')
setwd("~/PROJET/PACKAGE_DEEPS_GIT/Rdeepsledge/inst")
saveRDS(RESULT,'MPO_REFUGE_source.Rdata')
knitr::opts_chunk$set(echo = TRUE, fig.align="center",warning = FALSE,message = FALSE,error = TRUE)
file_path <- system.file("MPO_REFUGE_source.Rdata", package = "Rdeepsledge")
library(ggplot2)
library(kableExtra)
library(knitr)
exemple <- readRDS(file_path)
knitr::opts_chunk$set(echo = TRUE, fig.align="center",warning = FALSE,message = FALSE,error = TRUE)
file_path <- system.file("MPO_REFUGE_source.Rdata", package = "Rdeepsledge")
library(ggplot2)
library(kableExtra)
library(knitr)
exemple <- load(file_path)
knitr::opts_chunk$set(echo = TRUE, fig.align="center",warning = FALSE,message = FALSE,error = TRUE)
file_path <- system.file("MPO_REFUGE_source.Rdata", package = "Rdeepsledge")
library(ggplot2)
library(kableExtra)
library(knitr)
exemple <- load(file_path)
knitr::opts_chunk$set(echo = TRUE, fig.align="center",warning = FALSE,message = FALSE,error = TRUE)
file_path <- system.file("MPO_REFUGE_source.Rdata", package = "Rdeepsledge")
library(ggplot2)
library(kableExtra)
library(knitr)
exemple <- load(file_path)
file_path <- system.file("MPO_REFUGE_source.Rdata", package = "Rdeepsledge")
file_path
load(file_path)
MPO_REFUGE_source.Rdata
knitr::opts_chunk$set(echo = TRUE, fig.align="center",warning = FALSE,message = FALSE,error = TRUE)
file_path <- system.file("MPO_REFUGE_source.Rdata", package = "Rdeepsledge")
library(ggplot2)
library(kableExtra)
library(knitr)
exemple <- load(file_path)
exemple <- load(MPO_REFUGE_source.Rdata)
knitr::opts_chunk$set(echo = TRUE, fig.align="center",warning = FALSE,message = FALSE,error = TRUE)
file_path <- system.file("MPO_REFUGE_source.Rdata", package = "Rdeepsledge")
library(ggplot2)
library(kableExtra)
library(knitr)
# exemple <- load(file_path)
exemple <- load(MPO_REFUGE_source.Rdata)
devtools::document()
devtools::check()
devtools::build()
devtools::install()
library(Rdeepsledge)
knitr::opts_chunk$set(echo = TRUE, fig.align="center",warning = FALSE,message = FALSE,error = TRUE)
file_path <- system.file("MPO_REFUGE_source.Rdata", package = "Rdeepsledge")
library(ggplot2)
library(kableExtra)
library(knitr)
exemple <- load(file_path)
library(Rdeepsledge)
knitr::opts_chunk$set(echo = TRUE, fig.align="center",warning = FALSE,message = FALSE,error = TRUE)
file_path <- system.file("MPO_REFUGE_source.Rdata", package = "Rdeepsledge")
library(ggplot2)
library(kableExtra)
library(knitr)
exemple <- load(file_path)
# exemple <- load(MPO_REFUGE_source.Rdata)
file_path <- system.file("MPO_REFUGE_source.Rdata", package = "Rdeepsledge")
exemple <- load(file_path)
# exemple <- load(MPO_REFUGE_source.Rdata)
file_path <- system.file("MPO_REFUGE_source.Rdata", package = "Rdeepsledge")
exemple <- load(file_path)
# exemple <- load(MPO_REFUGE_source.Rdata)
Error in `load()`:
setwd("~/PROJET/PACKAGE_DEEPS_GIT/Rdeepsledge/inst")
dat <- load("MPO_REFUGE_source.RData")
dat <- load("MPO_REFUGE_source.Rdata")
setwd("~/PROJET/PACKAGE_DEEPS_GIT/Rdeepsledge/inst")
setwd("~/")
dat <- read.csv2(files.list(pattern="laser_plu")
dat <- read.csv2(files.list(pattern="laser_plu"))
dat <- read.csv2(list.files(pattern="laser_plu"))
dat <- read.csv2(list.files(pattern="laser_plume"))
dat <- read.csv2(list.files(pattern="laser_"))
dat <- read.csv2(list.files(pattern="laser"))
dat <- read.csv2("laser_position_Plume2022_P2ST16_GOPR_2022-07-18.txt")
dat
dat <- read.csv2("laser_position_Plume2022_P2ST16_GOPR_2022-07-18.txt",sep=",")
dat
dat <- read.csv2("laser_position_Plume2022_P2ST16_GOPR_2022-07-18.txt",sep'/t'
dat <- read.csv2("laser_position_Plume2022_P2ST16_GOPR_2022-07-18.txt",sep='/t')
dat <- read.csv2("laser_position_Plume2022_P2ST16_GOPR_2022-07-18.txt",sep='t/')
dat <- read.csv2("laser_position_Plume2022_P2ST16_GOPR_2022-07-18.txt",sep='\t')
dat
dat <- read.csv("laser_position_Plume2022_P2ST16_GOPR_2022-07-18.txt")
dat
dat <- read.csv("laser_position_Plume2022_P2ST16_GOPR_2022-07-18.txt",sep=" ")
dat
setwd("~/PROJET/PACKAGE_DEEPS_GIT/Rdeepsledge/inst")
save(dat, file = "MPO_REFUGE_source.RData")
file_path <- system.file("MPO_REFUGE_source.Rdata", package = "Rdeepsledge")
exemple <- load(file_path)
# exemple <- load(MPO_REFUGE_source.Rdata)
load("~/PROJET/PACKAGE_DEEPS_GIT/Rdeepsledge/inst/MPO_REFUGE_source.RData")
file_path <- system.file("MPO_REFUGE_source.Rdata", package = "Rdeepsledge")
file_path
setwd("~/PROJET/PACKAGE_DEEPS_GIT/Rdeepsledge/inst")
save(dat, file = "MPO_REFUGE_source.RData")
library(Rdeepsledge)
knitr::opts_chunk$set(echo = TRUE, fig.align="center",warning = FALSE,message = FALSE,error = TRUE)
file_path <- system.file("MPO_REFUGE_source.RData", package = "Rdeepsledge")
library(ggplot2)
library(kableExtra)
library(knitr)
exemple <- load(file_path)
# exemple <- load(MPO_REFUGE_source.Rdata)
setwd("~/PROJET/PACKAGE_DEEPS_GIT/Rdeepsledge/inst")
dat <- load("MPO_REFUGE_source.Rdata")
datt <- load("MPO_REFUGE_source.RData")
datt
load("MPO_REFUGE_source.RData")
dat
library(Rdeepsledge)
knitr::opts_chunk$set(echo = TRUE, fig.align="center",warning = FALSE,message = FALSE,error = TRUE)
file_path <- system.file("MPO_REFUGE_source.RData", package = "Rdeepsledge")
library(ggplot2)
library(kableExtra)
library(knitr)
load(file_path)
# exemple <- dat
library(Rdeepsledge)
knitr::opts_chunk$set(echo = TRUE, fig.align="center",warning = FALSE,message = FALSE,error = TRUE)
file_path <- system.file("MPO_REFUGE_source.RData", package = "Rdeepsledge")
library(ggplot2)
library(kableExtra)
library(knitr)
load(file_path)
exemple <- dat
system.file()
file_path <- system.file("MPO_REFUGE_source.RData", package = "Rdeepsledge")
file_path
setwd(file_path )
setwd(file_path)
file_path <- system.file("MPO_REFUGE_source.RData", package = "Rdeepsledge")
setwd(file_path)
list.files(file_path)
list.files()
remove.packages("Rdeepsledge")
